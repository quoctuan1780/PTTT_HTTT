CREATE DATABASE QLKS_PTTK
USE QLKS_PTTK
--------------------------------Tạo bảng-----------------------------------------------		

GO
CREATE TABLE DANGNHAP
(
	TENDN VARCHAR(40) NOT NULL PRIMARY KEY,
	MATKHAU VARCHAR(40) NOT NULL
)

GO
CREATE TABLE QUYEN
(
	MAQUYEN INT NOT NULL PRIMARY KEY,
	TENQUYEN VARCHAR(40) NOT NULL UNIQUE
)

GO
CREATE TABLE NHANVIEN
(
	MANV INT NOT NULL PRIMARY KEY,
	TENNV VARCHAR(40) NOT NULL,
	DIACHI VARCHAR(40) NOT NULL,
	SODT VARCHAR(11) UNIQUE,
	CHUCVU VARCHAR(20) NOT NULL,
	TENDN VARCHAR(40) REFERENCES DANGNHAP(TENDN),
	MAQUYEN INT REFERENCES QUYEN(MAQUYEN)
)

GO
CREATE TABLE KHACHHANG
(
	MAKH INT NOT NULL PRIMARY KEY,
	TENKH VARCHAR(40) NOT NULL,
	DIACHI VARCHAR(40) NOT NULL,
	GIOITINH VARCHAR(3) NOT NULL,
	SODT VARCHAR(11) UNIQUE,
	SO_CMND VARCHAR(15) NOT NULL UNIQUE,
	QUOCTICH VARCHAR(20) NOT NULL,	
)

GO
CREATE TABLE DICHVU
(
	MADV INT NOT NULL PRIMARY KEY,
	TENDV VARCHAR(40) NOT NULL,
	GIA MONEY NOT NULL
)

GO
CREATE TABLE PHONG
(
	MAPHONG INT NOT NULL PRIMARY KEY,
	LOAIPHONG VARCHAR(10) NOT NULL,
	GIA MONEY NOT NULL,
	SLKHACH INT NOT NULL,
	TINHTRANG VARCHAR(3) NOT NULL
)

GO 
CREATE TABLE PHIEUTHUE
(
	MAPT INT NOT  NULL PRIMARY KEY,
	MAPHONG INT NOT NULL REFERENCES PHONG(MAPHONG),
	MAKH INT NOT NULL REFERENCES KHACHHANG(MAKH),
	NGAYTHUE DATE NOT NULL,
	NGAYTRA DATE NOT NULL,
	SLKHACH INT NOT NULL,
	TRANGTHAI VARCHAR(3) NOT NULL
)

GO
CREATE TABLE SDDV
(
	MAPT INT NOT NULL REFERENCES PHIEUTHUE(MAPT),
	MADV INT NOT NULL REFERENCES DICHVU(MADV),
	NGAYSD DATE NOT NULL,
	SOLUONG INT,
	PRIMARY KEY(MAPT,MADV),
)

GO
CREATE TABLE HOADON
(
	MAHD INT NOT NULL PRIMARY KEY,
	MAPT INT NOT NULL REFERENCES PHIEUTHUE(MAPT),
	MANV INT NOT NULL REFERENCES NHANVIEN(MANV),
	NGAYLAP DATE NOT NULL,
	THANHTIEN MONEY,
	GHICHU VARCHAR(255),
)

GO
CREATE TABLE HS_DATTRUOC
(
	MAHS INT PRIMARY KEY,
	MAPHONG INT REFERENCES PHONG(MAPHONG),
	TENKH VARCHAR(40) NOT NULL,
	DIACHI VARCHAR(40) NOT NULL,
	GIOITINH VARCHAR(3) NOT NULL,
	SODT VARCHAR(11) UNIQUE,
	SO_CMND VARCHAR(15) NOT NULL UNIQUE,
	QUOCTICH VARCHAR(20) NOT NULL,	
	NGAY_DUKIEN_O DATE
)

-------------------------Một số ràng buộc------------------------------------------
ALTER TABLE KHACHHANG
ADD CONSTRAINT CHECK_GT
CHECK (GIOITINH = 'Nam' OR GIOITINH = 'Nu')

ALTER TABLE PHONG
ADD CONSTRAINT DF_TINHTRANG_PHONG DEFAULT('NO') FOR TINHTRANG

ALTER TABLE PHIEUTHUE
ADD CONSTRAINT DF_TRANGTHAI DEFAULT('NO') FOR TRANGTHAI 

ALTER TABLE PHONG
ADD CONSTRAINT CHECK_TT
CHECK (TINHTRANG = 'YES' OR TINHTRANG = 'NO')

ALTER TABLE PHONG
ADD CONSTRAINT CHECK_LP
CHECK (LOAIPHONG = 'Vip' OR LOAIPHONG = 'Thuong' OR LOAIPHONG = 'Don' OR LOAIPHONG = 'Doi')

ALTER TABLE PHONG
ADD CONSTRAINT CHECK_GIAPHONG
CHECK((LOAIPHONG = 'Vip' AND GIA = 300000) OR (LOAIPHONG = 'Thuong' AND GIA = 200000) OR (LOAIPHONG = 'Don' AND GIA = 100000) OR (LOAIPHONG = 'Doi' AND GIA = 150000))

ALTER TABLE NHANVIEN
ADD CONSTRAINT CHECK_CHUCVU
CHECK (CHUCVU = 'Le tan' OR CHUCVU = 'Ke toan'  OR CHUCVU = 'Quan ly' OR CHUCVU = 'Bao ve' OR CHUCVU = 'Quan tri')

-------------------Các trigger--------------------------------------------------------
------------------Trg kiểm tra ngày dịch vụ so với ngày thuê và ngày trả phòng
GO
CREATE TRIGGER TRG_CHECK_DATE_SDDV ON SDDV
FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @MAPT INT, @NGAYSD DATE, @NGAYTHUE DATE, @NGAYTRA DATE
	SELECT @MAPT = MAPT, @NGAYSD = NGAYSD
	FROM inserted	
	SELECT @NGAYTHUE = NGAYTHUE, @NGAYTRA = NGAYTRA
	FROM PHIEUTHUE
	WHERE MAPT = @MAPT
	IF (@NGAYSD >= @NGAYTHUE AND @NGAYSD <= @NGAYTRA)
		PRINT('THEM HOAC SU DUNG DICH VU THANH CONG')
	ELSE
	BEGIN
		PRINT('ERROR')
		ROLLBACK TRAN
	END
END

----------------trg Kiểm tra số lượng khách trong phiếu thuê so với số lượng khách max của phòng------
GO
CREATE TRIGGER TRG_CHECK_SLKHACH_PT ON PHIEUTHUE
FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @MAPHONG INT, @SLKHACH INT, @SLKHACH_MAX INT
	SELECT @MAPHONG = MAPHONG, @SLKHACH = SLKHACH
	FROM inserted
	SELECT @SLKHACH_MAX = SLKHACH
	FROM PHONG
	WHERE MAPHONG = @MAPHONG
	IF (@SLKHACH <= @SLKHACH_MAX)
		PRINT('THEM HOAC SUA PHIEU THUE THANH CONG')
	ELSE
	BEGIN
		PRINT('ERROR')
		ROLLBACK TRAN
	END
END
--------------------------------------Insert dữ liệu----------------------------------
INSERT INTO DANGNHAP VALUES('LT01','123456')
INSERT INTO DANGNHAP VALUES('LT02','123456')
INSERT INTO DANGNHAP VALUES('LT03','123456')
INSERT INTO DANGNHAP VALUES('LT04','123456')
INSERT INTO DANGNHAP VALUES('QL01','123456')
INSERT INTO DANGNHAP VALUES('QL02','123456')
INSERT INTO DANGNHAP VALUES('KT01','123456')
INSERT INTO DANGNHAP VALUES('KT02','123456')

INSERT INTO QUYEN VALUES(1, 'Le tan')
INSERT INTO QUYEN VALUES(2, 'Quan ly')
INSERT INTO QUYEN VALUES(3, 'Ke toan')
INSERT INTO QUYEN VALUES(4, 'Quan tri')

INSERT INTO NHANVIEN VALUES(1, 'Nguyen Van An', 'TP - HCM', '0359514231', 'Le tan', 'LT01', 1, 'Nam')
INSERT INTO NHANVIEN VALUES(2, 'Truong Bao Binh', 'TP - HCM', '0359514212', 'Le tan', 'LT02', 1, 'Nam')
INSERT INTO NHANVIEN VALUES(3, 'Nguyen Duc Tai', 'TP - HCM', '0359514451', 'Le tan', 'LT03', 1, 'Nam')
INSERT INTO NHANVIEN VALUES(4, 'Tran Trong Truong', 'TP - HCM', '0359514331', 'Le tan', 'LT04', 1, 'Nam')
INSERT INTO NHANVIEN VALUES(5, 'Tran Truong Anh', 'Da Nang', '0359514381', 'Quan ly', 'QL01', 2, 'Nam')
INSERT INTO NHANVIEN VALUES(6, 'Pham Anh Tuan', 'Ha Noi', '0358514381', 'Quan ly', 'QL02', 2, 'Nam')
INSERT INTO NHANVIEN VALUES(7, 'Nguyen Gia Bao', 'Khanh Hoa', '0358514120', 'Ke toan', 'KT02', 3, 'Nam')
INSERT INTO NHANVIEN VALUES(8, 'Tran Tuan Anh', 'TP - HCM', '0359632145', 'Ke toan', 'KT01', 3, 'Nam')
INSERT INTO NHANVIEN VALUES(9, 'Tran Tuan Dat', 'TP - HCM', '0359632230', 'Bao ve', null, null,  'Nu')

INSERT INTO PHONG VALUES(1, 'Vip', 300000, 4, 'NO')
INSERT INTO PHONG VALUES(2, 'Vip', 300000, 4, 'NO')
INSERT INTO PHONG VALUES(3, 'Vip', 300000, 4, 'NO')
INSERT INTO PHONG VALUES(4, 'Vip', 300000, 4, 'NO')
INSERT INTO PHONG VALUES(5, 'Vip', 300000, 4, 'NO')
INSERT INTO PHONG VALUES(6, 'Thuong', 200000, 3, 'NO')
INSERT INTO PHONG VALUES(7, 'Thuong', 200000, 3, 'NO')

-------------------------------Các Store------------------------------------------
------------------------------Procesure khách hàng--------------------------------
--Procedure thêm khách hàng
GO
CREATE PROCEDURE SP_THEMKHACHHANG
	@TENKH VARCHAR(40),
	@DIACHI VARCHAR(40),
	@GIOITINH VARCHAR(3),
	@SODT VARCHAR(11),
	@SO_CMND VARCHAR(15),
	@QUOCTICH VARCHAR(20)
AS
BEGIN
	DECLARE @DUYET CURSOR, @MAKH1 INT, @KIEMTRA INT
	SELECT @KIEMTRA = 1
	SET @DUYET = CURSOR FOR SELECT MAKH FROM KHACHHANG
	OPEN @DUYET
	FETCH NEXT FROM @DUYET INTO @MAKH1
	WHILE @@FETCH_STATUS = 0
	IF (@MAKH1 - @KIEMTRA <> 0) BREAK
		ELSE 
			BEGIN
				SELECT @KIEMTRA = @KIEMTRA + 1
				FETCH NEXT FROM @DUYET INTO @MAKH1 
			END
	IF NOT EXISTS (SELECT *
				   FROM KHACHHANG
				   WHERE @SODT = SODT OR @SO_CMND = SO_CMND)
	INSERT INTO KHACHHANG VALUES(@KIEMTRA, @TENKH , @DIACHI, @GIOITINH, @SODT, @SO_CMND, @QUOCTICH)
	ELSE ROLLBACK TRAN
	CLOSE @DUYET
	DEALLOCATE @DUYET
END	

--Procedure cập nhật khách hàng
GO
CREATE PROCEDURE SP_UPDATEKHACHHANG
	@MAKH INT,
	@TENKH VARCHAR(40),
	@DIACHI VARCHAR(40),
	@GIOITINH VARCHAR(3),
	@SODT VARCHAR(15),
	@SOCMND VARCHAR(15),
	@QUOCTICH VARCHAR(20)
AS
BEGIN
	IF NOT EXISTS(SELECT *
				  FROM KHACHHANG
				  WHERE MAKH <> @MAKH AND (SODT = @SODT OR SO_CMND = @SOCMND))
		BEGIN
			UPDATE KHACHHANG
			SET TENKH = @TENKH, DIACHI = @DIACHI, GIOITINH = @GIOITINH, SODT = @SODT, SO_CMND = @SOCMND, QUOCTICH = @QUOCTICH
			WHERE MAKH = @MAKH
		END
	ELSE ROLLBACK TRAN
END
------------------------------Procedure Dịch vụ------------------------------------------
-----------------------------Proc  thêm dịch vụ-----------------------------------------
GO
CREATE PROCEDURE SP_THEMDV
	@TENDV VARCHAR(40),
	@GIA INT
AS
BEGIN
	DECLARE @DUYET CURSOR, @MADV INT, @KIEMTRA INT
	SELECT @KIEMTRA = 1
	SET @DUYET = CURSOR FOR SELECT MADV FROM DICHVU	
	OPEN @DUYET
	FETCH NEXT FROM @DUYET INTO @MADV
	WHILE @@FETCH_STATUS = 0
	IF (@MADV - @KIEMTRA <> 0) BREAK
		ELSE 
			BEGIN
				SELECT @KIEMTRA = @KIEMTRA + 1
				FETCH NEXT FROM @DUYET INTO @MADV
			END 
	IF NOT EXISTS (SELECT *
				   FROM DICHVU
				   WHERE TENDV = @TENDV)
		INSERT INTO DICHVU VALUES(@KIEMTRA, @TENDV, @GIA)
	ELSE ROLLBACK TRAN
	CLOSE @DUYET
	DEALLOCATE @DUYET
END

--------------------------------Proc xóa dịch vụ--------------------------------------
GO
CREATE PROCEDURE SP_XOADICHVU
	@MADV INT
AS
BEGIN
	DELETE FROM SDDV WHERE MADV = @MADV
	DELETE FROM DICHVU WHERE MADV = @MADV
END

------------------------------Procedure Phòng------------------------------------------
------------------------------Proc Thêm phòng------------------------------------------
GO
CREATE PROCEDURE SP_THEMPHONG
	@LOAIPHONG VARCHAR(40),
	@GIA INT,
	@SLKHACH INT
AS
BEGIN
	DECLARE @DUYET CURSOR, @MAPHONG INT, @KIEMTRA INT
	SELECT @KIEMTRA = 1
	SET @DUYET = CURSOR FOR SELECT MAPHONG FROM PHONG
	OPEN @DUYET
	FETCH NEXT FROM @DUYET INTO @MAPHONG
	WHILE @@FETCH_STATUS = 0
	IF (@MAPHONG - @KIEMTRA <> 0) BREAK
		ELSE 
			BEGIN
				SELECT @KIEMTRA = @KIEMTRA + 1
				FETCH NEXT FROM @DUYET INTO @MAPHONG
			END 
	INSERT INTO PHONG VALUES(@KIEMTRA, @LOAIPHONG, @GIA, @SLKHACH, 'NO')
END

------------------------Proc xóa phòng-------------------------------------------
GO
CREATE PROCEDURE SP_XOAPHONG
	@MAPHONG INT
AS
BEGIN
	IF EXISTS (SELECT *
			   FROM PHONG
			   WHERE MAPHONG = @MAPHONG AND TINHTRANG = 'NO')
		DELETE FROM PHONG WHERE MAPHONG = @MAPHONG
	ELSE
	IF EXISTS (SELECT *
			   FROM PHONG P, PHIEUTHUE PT
			   WHERE P.MAPHONG = @MAPHONG AND P.MAPHONG = PT.MAPHONG AND PT.TRANGTHAI = 'YES')
		BEGIN
			UPDATE PHIEUTHUE
			SET MAPHONG = NULL
			WHERE MAPHONG = @MAPHONG AND TRANGTHAI = 'YES'
			DELETE FROM PHONG WHERE MAPHONG = @MAPHONG
		END
	ELSE ROLLBACK TRAN
END

-----------------------------Proc cập nhật lại phòng-----------------------------------
GO
CREATE PROCEDURE SP_UPDATEPHONG
	@MAPHONG INT,
	@LOAIPHONG VARCHAR(40),
	@GIA MONEY,
	@SLKHACH INT
AS
BEGIN
	IF EXISTS (SELECT *
			   FROM PHONG
			   WHERE MAPHONG = @MAPHONG AND TINHTRANG = 'NO')
		BEGIN
			UPDATE PHONG
			SET LOAIPHONG = @LOAIPHONG, GIA = @GIA, SLKHACH = @SLKHACH
			WHERE MAPHONG = @MAPHONG
		END
	ELSE  ROLLBACK TRAN
END

------------------------------Procesure Hồ sơ đặt trước--------------------------------
--------------Proc Thêm hồ sơ đặt trước----------------------------
GO
CREATE PROCEDURE SP_THEMHS_DATTRUOC
	@MAPHONG INT,
	@TENKH VARCHAR(40),
	@DIACHI VARCHAR(40),
	@GIOITINH VARCHAR(3),
	@SODT VARCHAR(11),
	@SO_CMND VARCHAR(15),
	@QUOCTICH VARCHAR(20),
	@NGAY_DK_O DATE
AS
BEGIN
	DECLARE @DUYET CURSOR, @MAHS INT, @KIEMTRA INT
	SELECT @KIEMTRA = 1
	SET @DUYET = CURSOR FOR SELECT MAHS FROM HS_DATTRUOC
	OPEN @DUYET
	FETCH NEXT FROM @DUYET INTO @MAHS
	WHILE @@FETCH_STATUS = 0
	IF (@MAHS - @KIEMTRA <> 0) BREAK
		ELSE 
			BEGIN
				SELECT @KIEMTRA = @KIEMTRA + 1
				FETCH NEXT FROM @DUYET INTO @MAHS 
			END
	IF NOT EXISTS (SELECT *
				   FROM PHONG
				   WHERE @MAPHONG = MAPHONG AND TINHTRANG = 'YES')
	BEGIN
		INSERT INTO HS_DATTRUOC VALUES(@KIEMTRA,  @MAPHONG, @TENKH , @DIACHI, @GIOITINH, @SODT, @SO_CMND, @QUOCTICH, @NGAY_DK_O)
		UPDATE PHONG
		SET TINHTRANG = 'YES'
		WHERE MAPHONG = @MAPHONG
	END
	ELSE ROLLBACK TRAN
	CLOSE @DUYET
	DEALLOCATE @DUYET
END

---------------------Proc Xóa hồ sơ đặt trước-------------------------------------------
GO
CREATE PROCEDURE SP_XOAHS_DATTRUOC
	@MAPHONG INT,
	@TENKH VARCHAR(40),
	@DIACHI VARCHAR(40),
	@GIOITINH VARCHAR(3),
	@SODT VARCHAR(11),
	@SO_CMND VARCHAR(15),
	@QUOCTICH VARCHAR(20),
	@NGAY_DK_O DATE
AS
BEGIN
	DELETE FROM HS_DATTRUOC
	WHERE MAPHONG = @MAPHONG AND TENKH = @TENKH AND DIACHI = @DIACHI AND GIOITINH = @GIOITINH AND SODT = @SODT AND SO_CMND = @SO_CMND AND QUOCTICH =  @QUOCTICH
			AND NGAY_DUKIEN_O = @NGAY_DK_O
	UPDATE PHONG
	SET TINHTRANG = 'NO'
	WHERE MAPHONG = @MAPHONG 	
END

------------------------------Procesure Phiếu thuê phòng---------------------------------------
---------------------------Proc Thêm phiếu thuê theo hồ sơ--------------------------------------
GO 
CREATE PROCEDURE SP_THEMPHIEUTHUE_HSDT
	@MAPHONG INT,
	@MAKH INT,
	@NGAYTHUE DATE,
	@NGAYTRA DATE,
	@SLKHACH INT
AS
BEGIN
	DECLARE @DUYET CURSOR, @MAPT INT, @KIEMTRA INT
	SELECT @KIEMTRA = 1
	SET @DUYET = CURSOR FOR SELECT MAPT FROM PHIEUTHUE
	OPEN @DUYET
	FETCH NEXT FROM @DUYET INTO @MAPT
	WHILE @@FETCH_STATUS = 0
	IF (@MAPT - @KIEMTRA <> 0) BREAK
		ELSE 
			BEGIN
				SELECT @KIEMTRA = @KIEMTRA + 1
				FETCH NEXT FROM @DUYET INTO @MAPT 
			END
	BEGIN
		INSERT INTO PHIEUTHUE VALUES(@KIEMTRA, @MAPHONG, @MAKH, @NGAYTHUE, @NGAYTRA, @SLKHACH, 'NO')
		DELETE FROM HS_DATTRUOC
		WHERE MAPHONG = @MAPHONG
	END
	CLOSE @DUYET
	DEALLOCATE @DUYET
END
-------------------------Proc Thêm phiếu thuê----------------------------------------------------
GO
CREATE PROCEDURE SP_THEMPHIEUTHUE
	@MAPHONG INT,
	@MAKH INT,
	@NGAYTHUE DATE,
	@NGAYTRA DATE,
	@SLKHACH INT
AS
BEGIN
	DECLARE @DUYET CURSOR, @MAPT INT, @KIEMTRA INT
	SELECT @KIEMTRA = 1
	SET @DUYET = CURSOR FOR SELECT MAPT FROM PHIEUTHUE	
	OPEN @DUYET
	FETCH NEXT FROM @DUYET INTO @MAPT
	WHILE @@FETCH_STATUS = 0
	IF (@MAPT - @KIEMTRA <> 0) BREAK
		ELSE 
			BEGIN
				SELECT @KIEMTRA = @KIEMTRA + 1
				FETCH NEXT FROM @DUYET INTO @MAPT 
			END 
	IF EXISTS (SELECT *
			   FROM PHONG
			   WHERE MAPHONG = @MAPHONG AND TINHTRANG = 'NO')
		BEGIN
			INSERT INTO PHIEUTHUE VALUES (@KIEMTRA, @MAPHONG, @MAKH, @NGAYTHUE, @NGAYTRA, @SLKHACH, 'NO')
			UPDATE PHONG
			SET TINHTRANG = 'YES'
			WHERE MAPHONG = @MAPHONG
		END
	ELSE ROLLBACK TRAN
	CLOSE @DUYET
	DEALLOCATE @DUYET
END
------------------------------Proc xóa phiếu thuê----------------------------------------
GO
CREATE PROCEDURE SP_XOAPHIEUTHUE
	@MAPT INT
AS
BEGIN
	IF NOT EXISTS (SELECT *
				   FROM HOADON HD, SDDV 
				   WHERE HD.MAPT = @MAPT OR SDDV.MAPT = @MAPT)
		BEGIN
			UPDATE PHONG
			SET TINHTRANG = 'NO'
			WHERE MAPHONG IN (SELECT MAPHONG 
							  FROM PHIEUTHUE
							  WHERE MAPT = @MAPT)
			DELETE FROM PHIEUTHUE 
			WHERE MAPT = @MAPT
		END
	ELSE ROLLBACK TRAN
END
----------------------------------Procedure Hóa đơn---------------------------------------------
---------------------------------Proc Thêm hóa đơn---------------------------------------
GO
CREATE PROCEDURE SP_THEMHOADON
	@MAPT INT,
	@MANV INT,
	@NGAYHD DATE,
	@GHICHU VARCHAR(255)
AS
BEGIN
	DECLARE @DUYET CURSOR, @MAHD INT, @KIEMTRA INT, @THANHTIEN MONEY
	SELECT @KIEMTRA = 1
	SET @DUYET = CURSOR FOR SELECT MAHD FROM HOADON
	OPEN @DUYET
	FETCH NEXT FROM @DUYET INTO @MAHD
	WHILE @@FETCH_STATUS = 0
	IF (@MAHD - @KIEMTRA <> 0) BREAK
		ELSE 
			BEGIN
				SELECT @KIEMTRA = @KIEMTRA + 1
				FETCH NEXT FROM @DUYET INTO @MAHD
			END 
	IF EXISTS (SELECT *
			   FROM PHIEUTHUE
			   WHERE MAPT = @MAPT)
		IF NOT EXISTS (SELECT * FROM HOADON WHERE MAPT = @MAPT)
			BEGIN
				SELECT @THANHTIEN = DBO.SP_TINHTHANHTIENHD(@MAPT)
				INSERT INTO HOADON VALUES(@KIEMTRA, @MAPT, @MANV, @NGAYHD, @THANHTIEN, @GHICHU)
				UPDATE PHIEUTHUE
				SET TRANGTHAI = 'YES'
				WHERE MAPT = @MAPT
				UPDATE PHONG
				SET TINHTRANG = 'NO'
				WHERE MAPHONG IN (SELECT MAPHONG
								  FROM PHIEUTHUE
								  WHERE MAPT = @MAPT)
			END
		ELSE ROLLBACK TRAN
	ELSE ROLLBACK TRAN
END

-------------------Proc Tính thành tiền của hóa đơn--------------------------------------------
GO
CREATE FUNCTION SP_TINHTHANHTIENHD(@MAPT INT)
	RETURNS MONEY
AS
BEGIN
	DECLARE @THANHTIEN MONEY, @TTDV MONEY, @TTTHUEPHONG MONEY, @SONGAY INT, @SONGAYQH INT
	SELECT @THANHTIEN = 0

	-- TINH TONG TIEN SU DUNG DICH VU

	SELECT @TTDV = (SELECT SUM(SD.SOLUONG*DV.GIA)
					FROM SDDV SD, DICHVU DV
					WHERE SD.MAPT = @MAPT AND SD.MADV = DV.MADV)

	--TINH SO NGAY O PHONG
	SELECT @SONGAY = DATEDIFF(DAY, NGAYTHUE, NGAYTRA) + 1, @SONGAYQH = DATEDIFF(DAY, NGAYTRA, GETDATE())
	FROM PHIEUTHUE
	WHERE MAPT = @MAPT

	--TINH TONG TIEN NGAY O PHONG DO
	IF (@SONGAYQH < 0)
		BEGIN
			SELECT @TTTHUEPHONG = @SONGAY * P.GIA
			FROM PHONG P, PHIEUTHUE PT
			WHERE MAPT = @MAPT AND PT.MAPHONG = P.MAPHONG
		END
	ELSE
		BEGIN
			SELECT @TTTHUEPHONG = (@SONGAY + @SONGAYQH) * P.GIA
			FROM PHONG P, PHIEUTHUE PT
			WHERE MAPT = @MAPT AND PT.MAPHONG = P.MAPHONG
		END
	IF (@TTDV IS NULL)
		SELECT @THANHTIEN = @TTTHUEPHONG
	ELSE
		SELECT @THANHTIEN = @TTTHUEPHONG + @TTDV
	RETURN @THANHTIEN
END

-----------------------Proc Xóa hóa đơn-----------------------------------------------
GO
CREATE PROCEDURE SP_XOAHOADON
	@MAHD INT
AS
BEGIN
	IF EXISTS (SELECT *
			   FROM HOADON
			   WHERE MAHD = @MAHD)
		BEGIN
			UPDATE PHIEUTHUE
			SET TRANGTHAI = 'NO'
			WHERE MAPT IN (SELECT MAPT FROM HOADON WHERE MAHD = @MAHD)

			UPDATE PHONG
			SET TINHTRANG = 'YES'
			WHERE MAPHONG IN (SELECT PT.MAPHONG FROM PHIEUTHUE PT, HOADON HD WHERE HD.MAHD = @MAHD AND PT.MAPT = HD.MAPT)

			DELETE FROM HOADON WHERE MAHD = @MAHD
		END
	ELSE ROLLBACK TRAN
END

----------------------------------------Procedure Nhân viên------------------------------------------------------------------
--------------------------Proc Thêm nhân viên-----------------------------------------------
GO
CREATE PROCEDURE SP_THEMNHANVIEN
	@TENNV VARCHAR(40),
	@DIACHI VARCHAR(40),
	@GIOITINH VARCHAR(3),
	@SODT VARCHAR(15),
	@CHUCVU VARCHAR(20)
AS
BEGIN
	DECLARE @DUYET CURSOR, @MANV INT, @KIEMTRA INT, @TENDN VARCHAR(40) = NULL, @MAQUYEN INT
	SELECT @KIEMTRA = 1
	SET @DUYET = CURSOR FOR SELECT MANV FROM NHANVIEN
	OPEN @DUYET
	FETCH NEXT FROM @DUYET INTO @MANV
	WHILE @@FETCH_STATUS = 0
	IF (@MANV - @KIEMTRA <> 0) BREAK
		ELSE 
			BEGIN
				SELECT @KIEMTRA = @KIEMTRA + 1
				FETCH NEXT FROM @DUYET INTO @MANV
			END 
	IF(@CHUCVU = 'Le tan')
	BEGIN
		IF (@KIEMTRA < 10) SELECT @TENDN = 'LT0' + CONVERT(varchar(10),@KIEMTRA) 
		ELSE SELECT @TENDN = 'LT' + CONVERT(varchar(10), @KIEMTRA) 
		SELECT @MAQUYEN = MAQUYEN
		FROM QUYEN
		WHERE TENQUYEN = @CHUCVU
		INSERT INTO DANGNHAP VALUES(@TENDN, '123456')
		INSERT INTO NHANVIEN VALUES (@KIEMTRA, @TENNV, @DIACHI, @SODT, @CHUCVU, @TENDN, @MAQUYEN, @GIOITINH)
	END
	IF (@CHUCVU = 'Quan ly')
	BEGIN
		IF (@KIEMTRA < 10) SELECT @TENDN = 'QL0' + CONVERT(VARCHAR(10),@KIEMTRA) 
		ELSE SELECT @TENDN = 'QL' + CONVERT(VARCHAR(10),@KIEMTRA) 
		SELECT @MAQUYEN = MAQUYEN
		FROM QUYEN
		WHERE TENQUYEN = @CHUCVU
		INSERT INTO DANGNHAP VALUES(@TENDN, '123456')
		INSERT INTO NHANVIEN VALUES (@KIEMTRA, @TENNV, @DIACHI, @SODT, @CHUCVU, @TENDN, @MAQUYEN, @GIOITINH)
	END
	IF (@CHUCVU = 'Ke toan')
	BEGIN
		IF (@KIEMTRA < 10) SELECT @TENDN = 'KT0' + CONVERT(VARCHAR(10),@KIEMTRA) 
		ELSE SELECT @TENDN = 'KT' + CONVERT(VARCHAR(10),@KIEMTRA) 
		SELECT @MAQUYEN = MAQUYEN
		FROM QUYEN
		WHERE TENQUYEN = @CHUCVU
		INSERT INTO DANGNHAP VALUES(@TENDN, '123456')
		INSERT INTO NHANVIEN VALUES (@KIEMTRA, @TENNV, @DIACHI, @SODT, @CHUCVU, @TENDN, @MAQUYEN, @GIOITINH)
	END
	IF (@CHUCVU = 'Quan tri')
	BEGIN
		IF (@KIEMTRA < 10) SELECT @TENDN = 'QT0' + CONVERT(VARCHAR(10),@KIEMTRA) 
		ELSE SELECT @TENDN = 'QT' + CONVERT(VARCHAR(10),@KIEMTRA) 
		SELECT @MAQUYEN = MAQUYEN
		FROM QUYEN
		WHERE TENQUYEN = @CHUCVU
		INSERT INTO DANGNHAP VALUES(@TENDN, '123456')
		INSERT INTO NHANVIEN VALUES (@KIEMTRA, @TENNV, @DIACHI, @SODT, @CHUCVU, @TENDN, @MAQUYEN, @GIOITINH)
	END
	IF (@CHUCVU = 'Bao ve') INSERT INTO NHANVIEN VALUES (@KIEMTRA, @TENNV, @DIACHI, @SODT, @CHUCVU, NULL, NULL, @GIOITINH) 
END

------------------------Proc Xóa nhân viên---------------------------------------------------
GO
CREATE PROCEDURE SP_XOANHANVIEN
	@MANV INT
AS 
BEGIN
	DECLARE @TENDN VARCHAR(40) = NULL
	SELECT @TENDN = TENDN FROM DANGNHAP WHERE TENDN IN (SELECT TENDN FROM NHANVIEN WHERE MANV = @MANV)
	IF NOT EXISTS( SELECT *
				   FROM HOADON
				   WHERE MANV = @MANV)
		BEGIN
			DELETE FROM NHANVIEN WHERE MANV = @MANV
			DELETE FROM DANGNHAP WHERE TENDN = @TENDN
		END
END
SELECT * FROM DANGNHAP
DECLARE @THANHTIEN MONEY, @TTDV MONEY, @TTTHUEPHONG MONEY, @SONGAY INT, @SONGAYQH INT, @MAPT INT = 9
BEGIN
	SELECT @THANHTIEN = 0

	-- TINH TONG TIEN SU DUNG DICH VU

	SELECT @TTDV = (SELECT SUM(SD.SOLUONG*DV.GIA)
					FROM SDDV SD, DICHVU DV
					WHERE SD.MAPT = @MAPT AND SD.MADV = DV.MADV)

	--TINH SO NGAY O PHONG
	SELECT @SONGAY = DATEDIFF(DAY, NGAYTHUE, NGAYTRA) + 1
	FROM PHIEUTHUE
	WHERE MAPT = @MAPT

	--TINH TONG TIEN NGAY O PHONG DO
		BEGIN
			SELECT @TTTHUEPHONG = @SONGAY * P.GIA
			FROM PHONG P, PHIEUTHUE PT
			WHERE MAPT = @MAPT AND PT.MAPHONG = P.MAPHONG
		END
	SELECT @THANHTIEN = @TTTHUEPHONG + @TTDV
	INSERT INTO HOADON VALUES(9, @MAPT, 1, '17/08/2017',@THANHTIEN, 'Da thanh toan')
				UPDATE PHIEUTHUE
				SET TRANGTHAI = 'YES'
				WHERE MAPT = @MAPT
				UPDATE PHONG
				SET TINHTRANG = 'NO'
				WHERE MAPHONG IN (SELECT MAPHONG
								  FROM PHIEUTHUE
								  WHERE MAPT = @MAPT)
END

SELECT * FROM PHIEUTHUE
SELECT * FROM HOADON